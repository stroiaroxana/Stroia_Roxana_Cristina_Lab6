<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Stroia_Roxana_Cristina_Lab6"
        xmlns:Auto_Lot_Model="clr-namespace:Auto_Lot_Model;assembly=Auto_Lot_Model" x:Class="Stroia_Roxana_Cristina_Lab6.MainWindow"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800" Loaded="Window_Loaded">
    <Window.Resources>
        <CollectionViewSource x:Key="customerViewSource" d:DesignSource="{d:DesignInstance {x:Type Auto_Lot_Model:Customer}, CreateList=True}"/>
        <CollectionViewSource x:Key="inventoryViewSource" d:DesignSource="{d:DesignInstance {x:Type Auto_Lot_Model:Inventory}, CreateList=True}"/>
        <CollectionViewSource x:Key="customerOrdersViewSource" Source="{Binding Orders, Source={StaticResource customerViewSource}}"/>
        <ControlTemplate x:Key="validationTemplate">
            <DockPanel>
                <TextBlock Foreground="Red" FontSize="20"   >!</TextBlock>
                <AdornedElementPlaceholder/>
            </DockPanel>
        </ControlTemplate>
        <Style x:Key  ="textBoxInError" TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"  
         Value="{Binding RelativeSource={x:Static RelativeSource.Self}, 
                        Path=(Validation.Errors)/ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
        <TabControl x:Name="tbCtrlAutoLot" HorizontalAlignment="Left" Height="401" Margin="10,10,0,0" VerticalAlignment="Top" Width="773">
            <TabItem Header="Customers">
                <Grid Background="#FFE5E5E5" DataContext="{StaticResource customerViewSource}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="105*"/>
                        <ColumnDefinition Width="662*"/>
                    </Grid.ColumnDefinitions>
                    <DataGrid x:Name="customerDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="252.167,10,9.666,234.667" RowDetailsVisibilityMode="VisibleWhenSelected" Grid.Column="1">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="custIdColumn" Binding="{Binding CustId}" Header="Cust Id" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="firstNameColumn" Binding="{Binding FirstName}" Header="First Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="lastNameColumn" Binding="{Binding LastName}" Header="Last Name" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid x:Name="grid1" HorizontalAlignment="Left" Margin="268.167,243,0,0" VerticalAlignment="Top" Grid.Column="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label x:Name="custIdTextBox1" Content="Cust Id:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center" IsEnabled="False"/>
                        <TextBox x:Name="custIdTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="0" Text="{Binding CustId, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                        <Label Content="First Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="1" VerticalAlignment="Center"/>
                        <TextBox x:Name="firstNameTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="1" Text="{Binding FirstName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Validation.ErrorTemplate="{StaticResource validationTemplate}" Style="{StaticResource textBoxInError}"/>
                        <Label Content="Last Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="2" VerticalAlignment="Center"/>
                        <TextBox x:Name="lastNameTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="2" Text="{Binding LastName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Validation.ErrorTemplate="{StaticResource validationTemplate}" Style="{StaticResource textBoxInError}"/>
                    </Grid>
                    <Button x:Name="btnNew" Content="New" HorizontalAlignment="Left" Height="25" Margin="23,44,0,0" VerticalAlignment="Top" Width="82" Click="btnNew_Click" Grid.ColumnSpan="2"/>
                    <Button x:Name="btnDelete" Content="Delete" HorizontalAlignment="Left" Height="25" Margin="23,145,0,0" VerticalAlignment="Top" Width="82" Grid.ColumnSpan="2" Click="btnDelete_Click"/>
                    <Button x:Name="btnEdit" Content="Edit" HorizontalAlignment="Left" Height="25" Margin="23,95,0,0" VerticalAlignment="Top" Width="82" Grid.ColumnSpan="2" Click="btnEdit_Click"/>
                    <Button x:Name="btnSave" Content="Save" HorizontalAlignment="Left" Height="25" Margin="23,266,0,0" VerticalAlignment="Top" Width="82" Click="btnSave_Click" Grid.ColumnSpan="2">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="IsEnabled" Value="false"/>
                                <Style.Triggers>
                                    <!--Butonul Save va fi inactiv daca exista erori de validare -->
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ElementName=lastNameTextBox, Path=(Validation.HasError)}" Value="false" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="true" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button x:Name="btnCancel" Content="Cancel" HorizontalAlignment="Left" Height="25" Margin="23,314,0,0" VerticalAlignment="Top" Width="82" Grid.ColumnSpan="2"/>
                    <Button x:Name="btnPrev" Content="Previous" HorizontalAlignment="Left" Height="25" Margin="252.167,145,0,0" VerticalAlignment="Top" Width="119" Click="btnPrev_Click" Grid.Column="1"/>
                    <Button x:Name="btnNext" Content="Next" HorizontalAlignment="Left" Height="25" Margin="533.167,145,0,0" VerticalAlignment="Top" Width="119" Grid.Column="1"/>
                </Grid>
            </TabItem>
            <TabItem Header="Inventory">
                <Grid Background="#FFE5E5E5" DataContext="{StaticResource inventoryViewSource}">
                    <DataGrid x:Name="inventoryDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="357,25,9.667,202.667" RowDetailsVisibilityMode="VisibleWhenSelected">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="carIdColumn" Binding="{Binding CarId}" Header="Car Id" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="colorColumn" Binding="{Binding Color}" Header="Color" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="makeColumn" Binding="{Binding Make}" Header="Make" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid x:Name="grid2" HorizontalAlignment="Left" Margin="370,258,0,0" VerticalAlignment="Top">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="Car Id:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center"/>
                        <TextBox x:Name="carIdTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="0" Text="{Binding CarId, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" IsEnabled="False"/>
                        <Label Content="Color:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="1" VerticalAlignment="Center"/>
                        <TextBox x:Name="colorTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="1" Text="{Binding Color, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                        <Label Content="Make:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="2" VerticalAlignment="Center"/>
                        <TextBox x:Name="makeTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="2" Text="{Binding Make, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                    </Grid>
                    <Button x:Name="btnNew1" Content="New" HorizontalAlignment="Left" Height="25" Margin="23,43,0,0" VerticalAlignment="Top" Width="93"/>
                    <Button x:Name="btnDelete1" Content="Delete" HorizontalAlignment="Left" Height="25" Margin="23,130,0,0" VerticalAlignment="Top" Width="93"/>
                    <Button x:Name="btnEdit1" Content="Edit" HorizontalAlignment="Left" Height="25" Margin="23,88,0,0" VerticalAlignment="Top" Width="93"/>
                    <Button x:Name="btnSave1" Content="Save" HorizontalAlignment="Left" Height="25" Margin="23,259,0,0" VerticalAlignment="Top" Width="93" Click="btnSave1_Click"/>
                    <Button x:Name="btnCancel1" Content="Cancel" HorizontalAlignment="Left" Height="25" Margin="23,312,0,0" VerticalAlignment="Top" Width="93"/>
                    <Button x:Name="btnPrev1" Content="Previous" HorizontalAlignment="Left" Height="28" Margin="357,175,0,0" VerticalAlignment="Top" Width="140" Click="btnPrev1_Click"/>
                    <Button x:Name="btnNext1" Content="Next" HorizontalAlignment="Left" Height="28" Margin="617,175,0,0" VerticalAlignment="Top" Width="140" Click="btnNext1_Click"/>
                </Grid>
            </TabItem>
            <TabItem Header="Orders">
                <Grid x:Name="ordersDataGrid1" Background="#FFE5E5E5" DataContext="{StaticResource customerOrdersViewSource}">
                    <Label x:Name="lblCustomers" Content="Customers" HorizontalAlignment="Left" Height="31" Margin="133,51,0,0" VerticalAlignment="Top" Width="142"/>
                    <Label x:Name="lblInventory" Content="Inventory" HorizontalAlignment="Left" Height="31" Margin="448,51,0,0" VerticalAlignment="Top" Width="142"/>
                    <ComboBox x:Name="cmbCustomers" HorizontalAlignment="Left" Height="30" Margin="133,104,0,0" VerticalAlignment="Top" Width="176" RenderTransformOrigin="0.622,1.378">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} {1}">
                                            <Binding Path="FirstName"/>
                                            <Binding Path="LastName"/>
                                        </MultiBinding>
                                    </TextBlock.Text></TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <ComboBox x:Name="cmbInventory" HorizontalAlignment="Left" Height="30" Margin="448,104,0,0" VerticalAlignment="Top" Width="176">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} - {1}">
                                            <Binding Path="Make"/>
                                            <Binding Path="Color"/>
                                        </MultiBinding>
                                    </TextBlock.Text></TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <DataGrid x:Name="ordersDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="133,163,142.667,77.667" RowDetailsVisibilityMode="VisibleWhenSelected">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="carIdColumn1" Binding="{Binding CarId}" Header="Car Id" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="custIdColumn1" Binding="{Binding CustId}" Header="Cust Id" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="orderIdColumn1" Binding="{Binding OrderId}" Header="Order Id" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Button x:Name="btnNew2" Content="New" HorizontalAlignment="Left" Height="29" Margin="25,35,0,0" VerticalAlignment="Top" Width="85"/>
                    <Button x:Name="btnDelete2" Content="Delete" HorizontalAlignment="Left" Height="29" Margin="25,141,0,0" VerticalAlignment="Top" Width="85"/>
                    <Button x:Name="btnEdit2" Content="Edit" HorizontalAlignment="Left" Height="29" Margin="25,88,0,0" VerticalAlignment="Top" Width="85"/>
                    <Button x:Name="btnSave2" Content="Save" HorizontalAlignment="Left" Height="29" Margin="25,232,0,0" VerticalAlignment="Top" Width="85"/>
                    <Button x:Name="btnCancel2" Content="Cancel" HorizontalAlignment="Left" Height="29" Margin="25,266,0,0" VerticalAlignment="Top" Width="85"/>
                    <Button x:Name="btnPrev2" Content="Previous" HorizontalAlignment="Left" Height="29" Margin="133,300,0,0" VerticalAlignment="Top" Width="142"/>
                    <Button x:Name="btnNext2" Content="Next" HorizontalAlignment="Left" Height="29" Margin="482,300,0,0" VerticalAlignment="Top" Width="142"/>
                </Grid>
            </TabItem>
        </TabControl>

    </Grid>
</Window>
